/* tslint:disable */
/* eslint-disable */
/**
 * Songvoter
 * Songvoter
 *
 * The version of the OpenAPI document: 0.0.1
 * Contact: support@coflnet.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { exists, mapValues } from '../runtime';
/**
 * 
 * @export
 * @interface CoflnetSongVoterModelsParty
 */
export interface CoflnetSongVoterModelsParty {
    /**
     * Gets or Sets Id
     * @type {string}
     * @memberof CoflnetSongVoterModelsParty
     */
    id?: string | null;
    /**
     * Gets or Sets Name
     * @type {string}
     * @memberof CoflnetSongVoterModelsParty
     */
    name?: string | null;
    /**
     * The id of the creator
     * @type {string}
     * @memberof CoflnetSongVoterModelsParty
     */
    ownerId?: string | null;
    /**
     * Gets or Sets Members
     * @type {Array<string>}
     * @memberof CoflnetSongVoterModelsParty
     */
    members?: Array<string> | null;
}

/**
 * Check if a given object implements the CoflnetSongVoterModelsParty interface.
 */
export function instanceOfCoflnetSongVoterModelsParty(value: object): boolean {
    let isInstance = true;

    return isInstance;
}

export function CoflnetSongVoterModelsPartyFromJSON(json: any): CoflnetSongVoterModelsParty {
    return CoflnetSongVoterModelsPartyFromJSONTyped(json, false);
}

export function CoflnetSongVoterModelsPartyFromJSONTyped(json: any, ignoreDiscriminator: boolean): CoflnetSongVoterModelsParty {
    if ((json === undefined) || (json === null)) {
        return json;
    }
    return {
        
        'id': !exists(json, 'id') ? undefined : json['id'],
        'name': !exists(json, 'name') ? undefined : json['name'],
        'ownerId': !exists(json, 'ownerId') ? undefined : json['ownerId'],
        'members': !exists(json, 'members') ? undefined : json['members'],
    };
}

export function CoflnetSongVoterModelsPartyToJSON(value?: CoflnetSongVoterModelsParty | null): any {
    if (value === undefined) {
        return undefined;
    }
    if (value === null) {
        return null;
    }
    return {
        
        'id': value.id,
        'name': value.name,
        'ownerId': value.ownerId,
        'members': value.members,
    };
}

