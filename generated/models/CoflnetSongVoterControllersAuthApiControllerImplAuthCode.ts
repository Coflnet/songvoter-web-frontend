/* tslint:disable */
/* eslint-disable */
/**
 * Songvoter
 * Songvoter
 *
 * The version of the OpenAPI document: 0.0.1
 * Contact: support@coflnet.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { exists, mapValues } from '../runtime';
/**
 * Authenticate with google
 * @export
 * @interface CoflnetSongVoterControllersAuthApiControllerImplAuthCode
 */
export interface CoflnetSongVoterControllersAuthApiControllerImplAuthCode {
    /**
     * 
     * @type {string}
     * @memberof CoflnetSongVoterControllersAuthApiControllerImplAuthCode
     */
    code?: string | null;
    /**
     * 
     * @type {string}
     * @memberof CoflnetSongVoterControllersAuthApiControllerImplAuthCode
     */
    redirectUri?: string | null;
}

/**
 * Check if a given object implements the CoflnetSongVoterControllersAuthApiControllerImplAuthCode interface.
 */
export function instanceOfCoflnetSongVoterControllersAuthApiControllerImplAuthCode(value: object): boolean {
    let isInstance = true;

    return isInstance;
}

export function CoflnetSongVoterControllersAuthApiControllerImplAuthCodeFromJSON(json: any): CoflnetSongVoterControllersAuthApiControllerImplAuthCode {
    return CoflnetSongVoterControllersAuthApiControllerImplAuthCodeFromJSONTyped(json, false);
}

export function CoflnetSongVoterControllersAuthApiControllerImplAuthCodeFromJSONTyped(json: any, ignoreDiscriminator: boolean): CoflnetSongVoterControllersAuthApiControllerImplAuthCode {
    if ((json === undefined) || (json === null)) {
        return json;
    }
    return {
        
        'code': !exists(json, 'code') ? undefined : json['code'],
        'redirectUri': !exists(json, 'redirectUri') ? undefined : json['redirectUri'],
    };
}

export function CoflnetSongVoterControllersAuthApiControllerImplAuthCodeToJSON(value?: CoflnetSongVoterControllersAuthApiControllerImplAuthCode | null): any {
    if (value === undefined) {
        return undefined;
    }
    if (value === null) {
        return null;
    }
    return {
        
        'code': value.code,
        'redirectUri': value.redirectUri,
    };
}

