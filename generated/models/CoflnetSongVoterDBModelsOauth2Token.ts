/* tslint:disable */
/* eslint-disable */
/**
 * Songvoter
 * Songvoter
 *
 * The version of the OpenAPI document: 0.0.1
 * Contact: support@coflnet.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { exists, mapValues } from '../runtime';
import type { CoflnetSongVoterDBModelsPlatforms } from './CoflnetSongVoterDBModelsPlatforms';
import {
    CoflnetSongVoterDBModelsPlatformsFromJSON,
    CoflnetSongVoterDBModelsPlatformsFromJSONTyped,
    CoflnetSongVoterDBModelsPlatformsToJSON,
} from './CoflnetSongVoterDBModelsPlatforms';
import type { CoflnetSongVoterDBModelsUser } from './CoflnetSongVoterDBModelsUser';
import {
    CoflnetSongVoterDBModelsUserFromJSON,
    CoflnetSongVoterDBModelsUserFromJSONTyped,
    CoflnetSongVoterDBModelsUserToJSON,
} from './CoflnetSongVoterDBModelsUser';

/**
 * The tokens to platforms a user can login with
 * @export
 * @interface CoflnetSongVoterDBModelsOauth2Token
 */
export interface CoflnetSongVoterDBModelsOauth2Token {
    /**
     * The id of this token
     * @type {number}
     * @memberof CoflnetSongVoterDBModelsOauth2Token
     */
    id?: number;
    /**
     * 
     * @type {CoflnetSongVoterDBModelsUser}
     * @memberof CoflnetSongVoterDBModelsOauth2Token
     */
    user?: CoflnetSongVoterDBModelsUser;
    /**
     * 
     * @type {CoflnetSongVoterDBModelsPlatforms}
     * @memberof CoflnetSongVoterDBModelsOauth2Token
     */
    platform?: CoflnetSongVoterDBModelsPlatforms;
    /**
     * The auth code to get the access token
     * @type {string}
     * @memberof CoflnetSongVoterDBModelsOauth2Token
     */
    authCode?: string | null;
    /**
     * The access token to access the api
     * @type {string}
     * @memberof CoflnetSongVoterDBModelsOauth2Token
     */
    accessToken?: string | null;
    /**
     * The refresh token to get a new access token
     * @type {string}
     * @memberof CoflnetSongVoterDBModelsOauth2Token
     */
    refreshToken?: string | null;
    /**
     * External id of the user
     * @type {string}
     * @memberof CoflnetSongVoterDBModelsOauth2Token
     */
    externalId?: string | null;
    /**
     * The scopes this token has access to, seperated by comma
     * @type {string}
     * @memberof CoflnetSongVoterDBModelsOauth2Token
     */
    scropes?: string | null;
    /**
     * The time this token expires
     * @type {Date}
     * @memberof CoflnetSongVoterDBModelsOauth2Token
     */
    expiration?: Date;
}

/**
 * Check if a given object implements the CoflnetSongVoterDBModelsOauth2Token interface.
 */
export function instanceOfCoflnetSongVoterDBModelsOauth2Token(value: object): boolean {
    let isInstance = true;

    return isInstance;
}

export function CoflnetSongVoterDBModelsOauth2TokenFromJSON(json: any): CoflnetSongVoterDBModelsOauth2Token {
    return CoflnetSongVoterDBModelsOauth2TokenFromJSONTyped(json, false);
}

export function CoflnetSongVoterDBModelsOauth2TokenFromJSONTyped(json: any, ignoreDiscriminator: boolean): CoflnetSongVoterDBModelsOauth2Token {
    if ((json === undefined) || (json === null)) {
        return json;
    }
    return {
        
        'id': !exists(json, 'id') ? undefined : json['id'],
        'user': !exists(json, 'user') ? undefined : CoflnetSongVoterDBModelsUserFromJSON(json['user']),
        'platform': !exists(json, 'platform') ? undefined : CoflnetSongVoterDBModelsPlatformsFromJSON(json['platform']),
        'authCode': !exists(json, 'authCode') ? undefined : json['authCode'],
        'accessToken': !exists(json, 'accessToken') ? undefined : json['accessToken'],
        'refreshToken': !exists(json, 'refreshToken') ? undefined : json['refreshToken'],
        'externalId': !exists(json, 'externalId') ? undefined : json['externalId'],
        'scropes': !exists(json, 'scropes') ? undefined : json['scropes'],
        'expiration': !exists(json, 'expiration') ? undefined : (new Date(json['expiration'])),
    };
}

export function CoflnetSongVoterDBModelsOauth2TokenToJSON(value?: CoflnetSongVoterDBModelsOauth2Token | null): any {
    if (value === undefined) {
        return undefined;
    }
    if (value === null) {
        return null;
    }
    return {
        
        'id': value.id,
        'user': CoflnetSongVoterDBModelsUserToJSON(value.user),
        'platform': CoflnetSongVoterDBModelsPlatformsToJSON(value.platform),
        'authCode': value.authCode,
        'accessToken': value.accessToken,
        'refreshToken': value.refreshToken,
        'externalId': value.externalId,
        'scropes': value.scropes,
        'expiration': value.expiration === undefined ? undefined : (value.expiration.toISOString()),
    };
}

