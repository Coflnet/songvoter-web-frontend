/* tslint:disable */
/* eslint-disable */
/**
 * Songvoter
 * Songvoter
 *
 * The version of the OpenAPI document: 0.0.1
 * Contact: support@coflnet.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { exists, mapValues } from '../runtime';
import type { CoflnetSongVoterDBModelsParty } from './CoflnetSongVoterDBModelsParty';
import {
    CoflnetSongVoterDBModelsPartyFromJSON,
    CoflnetSongVoterDBModelsPartyFromJSONTyped,
    CoflnetSongVoterDBModelsPartyToJSON,
} from './CoflnetSongVoterDBModelsParty';
import type { CoflnetSongVoterDBModelsSong } from './CoflnetSongVoterDBModelsSong';
import {
    CoflnetSongVoterDBModelsSongFromJSON,
    CoflnetSongVoterDBModelsSongFromJSONTyped,
    CoflnetSongVoterDBModelsSongToJSON,
} from './CoflnetSongVoterDBModelsSong';
import type { CoflnetSongVoterDBModelsUser } from './CoflnetSongVoterDBModelsUser';
import {
    CoflnetSongVoterDBModelsUserFromJSON,
    CoflnetSongVoterDBModelsUserFromJSONTyped,
    CoflnetSongVoterDBModelsUserToJSON,
} from './CoflnetSongVoterDBModelsUser';

/**
 * Maps a party to songs
 * @export
 * @interface CoflnetSongVoterDBModelsPartySong
 */
export interface CoflnetSongVoterDBModelsPartySong {
    /**
     * 
     * @type {number}
     * @memberof CoflnetSongVoterDBModelsPartySong
     */
    id?: number;
    /**
     * 
     * @type {CoflnetSongVoterDBModelsParty}
     * @memberof CoflnetSongVoterDBModelsPartySong
     */
    party?: CoflnetSongVoterDBModelsParty;
    /**
     * 
     * @type {number}
     * @memberof CoflnetSongVoterDBModelsPartySong
     */
    partyId?: number;
    /**
     * Who (and how many) upvoted this
     * @type {Array<CoflnetSongVoterDBModelsUser>}
     * @memberof CoflnetSongVoterDBModelsPartySong
     */
    upVoters?: Array<CoflnetSongVoterDBModelsUser> | null;
    /**
     * Who (and how many) downvoted this
     * @type {Array<CoflnetSongVoterDBModelsUser>}
     * @memberof CoflnetSongVoterDBModelsPartySong
     */
    downVoters?: Array<CoflnetSongVoterDBModelsUser> | null;
    /**
     * How often this song has been played already
     * @type {number}
     * @memberof CoflnetSongVoterDBModelsPartySong
     */
    playedTimes?: number;
    /**
     * 
     * @type {CoflnetSongVoterDBModelsSong}
     * @memberof CoflnetSongVoterDBModelsPartySong
     */
    song?: CoflnetSongVoterDBModelsSong;
    /**
     * 
     * @type {number}
     * @memberof CoflnetSongVoterDBModelsPartySong
     */
    songId?: number;
}

/**
 * Check if a given object implements the CoflnetSongVoterDBModelsPartySong interface.
 */
export function instanceOfCoflnetSongVoterDBModelsPartySong(value: object): boolean {
    let isInstance = true;

    return isInstance;
}

export function CoflnetSongVoterDBModelsPartySongFromJSON(json: any): CoflnetSongVoterDBModelsPartySong {
    return CoflnetSongVoterDBModelsPartySongFromJSONTyped(json, false);
}

export function CoflnetSongVoterDBModelsPartySongFromJSONTyped(json: any, ignoreDiscriminator: boolean): CoflnetSongVoterDBModelsPartySong {
    if ((json === undefined) || (json === null)) {
        return json;
    }
    return {
        
        'id': !exists(json, 'id') ? undefined : json['id'],
        'party': !exists(json, 'party') ? undefined : CoflnetSongVoterDBModelsPartyFromJSON(json['party']),
        'partyId': !exists(json, 'partyId') ? undefined : json['partyId'],
        'upVoters': !exists(json, 'upVoters') ? undefined : (json['upVoters'] === null ? null : (json['upVoters'] as Array<any>).map(CoflnetSongVoterDBModelsUserFromJSON)),
        'downVoters': !exists(json, 'downVoters') ? undefined : (json['downVoters'] === null ? null : (json['downVoters'] as Array<any>).map(CoflnetSongVoterDBModelsUserFromJSON)),
        'playedTimes': !exists(json, 'playedTimes') ? undefined : json['playedTimes'],
        'song': !exists(json, 'song') ? undefined : CoflnetSongVoterDBModelsSongFromJSON(json['song']),
        'songId': !exists(json, 'songId') ? undefined : json['songId'],
    };
}

export function CoflnetSongVoterDBModelsPartySongToJSON(value?: CoflnetSongVoterDBModelsPartySong | null): any {
    if (value === undefined) {
        return undefined;
    }
    if (value === null) {
        return null;
    }
    return {
        
        'id': value.id,
        'party': CoflnetSongVoterDBModelsPartyToJSON(value.party),
        'partyId': value.partyId,
        'upVoters': value.upVoters === undefined ? undefined : (value.upVoters === null ? null : (value.upVoters as Array<any>).map(CoflnetSongVoterDBModelsUserToJSON)),
        'downVoters': value.downVoters === undefined ? undefined : (value.downVoters === null ? null : (value.downVoters as Array<any>).map(CoflnetSongVoterDBModelsUserToJSON)),
        'playedTimes': value.playedTimes,
        'song': CoflnetSongVoterDBModelsSongToJSON(value.song),
        'songId': value.songId,
    };
}

