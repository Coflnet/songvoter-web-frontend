/* tslint:disable */
/* eslint-disable */
/**
 * Songvoter
 * Songvoter
 *
 * The version of the OpenAPI document: 0.0.1
 * Contact: support@coflnet.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { exists, mapValues } from '../runtime';
import type { CoflnetSongVoterDBModelsOauth2Token } from './CoflnetSongVoterDBModelsOauth2Token';
import {
    CoflnetSongVoterDBModelsOauth2TokenFromJSON,
    CoflnetSongVoterDBModelsOauth2TokenFromJSONTyped,
    CoflnetSongVoterDBModelsOauth2TokenToJSON,
} from './CoflnetSongVoterDBModelsOauth2Token';
import type { CoflnetSongVoterDBModelsParty } from './CoflnetSongVoterDBModelsParty';
import {
    CoflnetSongVoterDBModelsPartyFromJSON,
    CoflnetSongVoterDBModelsPartyFromJSONTyped,
    CoflnetSongVoterDBModelsPartyToJSON,
} from './CoflnetSongVoterDBModelsParty';
import type { CoflnetSongVoterDBModelsPartySong } from './CoflnetSongVoterDBModelsPartySong';
import {
    CoflnetSongVoterDBModelsPartySongFromJSON,
    CoflnetSongVoterDBModelsPartySongFromJSONTyped,
    CoflnetSongVoterDBModelsPartySongToJSON,
} from './CoflnetSongVoterDBModelsPartySong';

/**
 * 
 * @export
 * @interface CoflnetSongVoterDBModelsUser
 */
export interface CoflnetSongVoterDBModelsUser {
    /**
     * 
     * @type {number}
     * @memberof CoflnetSongVoterDBModelsUser
     */
    id?: number;
    /**
     * 
     * @type {string}
     * @memberof CoflnetSongVoterDBModelsUser
     */
    name?: string | null;
    /**
     * 
     * @type {string}
     * @memberof CoflnetSongVoterDBModelsUser
     */
    googleId?: string | null;
    /**
     * The songs this user upvoted
     * @type {Array<CoflnetSongVoterDBModelsPartySong>}
     * @memberof CoflnetSongVoterDBModelsUser
     */
    upvotes?: Array<CoflnetSongVoterDBModelsPartySong> | null;
    /**
     * The songs this user downvoted
     * @type {Array<CoflnetSongVoterDBModelsPartySong>}
     * @memberof CoflnetSongVoterDBModelsUser
     */
    downvotes?: Array<CoflnetSongVoterDBModelsPartySong> | null;
    /**
     * The parties this user is a member of
     * @type {Array<CoflnetSongVoterDBModelsParty>}
     * @memberof CoflnetSongVoterDBModelsUser
     */
    parties?: Array<CoflnetSongVoterDBModelsParty> | null;
    /**
     * The tokens to platforms a user can login with
     * @type {Array<CoflnetSongVoterDBModelsOauth2Token>}
     * @memberof CoflnetSongVoterDBModelsUser
     */
    tokens?: Array<CoflnetSongVoterDBModelsOauth2Token> | null;
}

/**
 * Check if a given object implements the CoflnetSongVoterDBModelsUser interface.
 */
export function instanceOfCoflnetSongVoterDBModelsUser(value: object): boolean {
    let isInstance = true;

    return isInstance;
}

export function CoflnetSongVoterDBModelsUserFromJSON(json: any): CoflnetSongVoterDBModelsUser {
    return CoflnetSongVoterDBModelsUserFromJSONTyped(json, false);
}

export function CoflnetSongVoterDBModelsUserFromJSONTyped(json: any, ignoreDiscriminator: boolean): CoflnetSongVoterDBModelsUser {
    if ((json === undefined) || (json === null)) {
        return json;
    }
    return {
        
        'id': !exists(json, 'id') ? undefined : json['id'],
        'name': !exists(json, 'name') ? undefined : json['name'],
        'googleId': !exists(json, 'googleId') ? undefined : json['googleId'],
        'upvotes': !exists(json, 'upvotes') ? undefined : (json['upvotes'] === null ? null : (json['upvotes'] as Array<any>).map(CoflnetSongVoterDBModelsPartySongFromJSON)),
        'downvotes': !exists(json, 'downvotes') ? undefined : (json['downvotes'] === null ? null : (json['downvotes'] as Array<any>).map(CoflnetSongVoterDBModelsPartySongFromJSON)),
        'parties': !exists(json, 'parties') ? undefined : (json['parties'] === null ? null : (json['parties'] as Array<any>).map(CoflnetSongVoterDBModelsPartyFromJSON)),
        'tokens': !exists(json, 'tokens') ? undefined : (json['tokens'] === null ? null : (json['tokens'] as Array<any>).map(CoflnetSongVoterDBModelsOauth2TokenFromJSON)),
    };
}

export function CoflnetSongVoterDBModelsUserToJSON(value?: CoflnetSongVoterDBModelsUser | null): any {
    if (value === undefined) {
        return undefined;
    }
    if (value === null) {
        return null;
    }
    return {
        
        'id': value.id,
        'name': value.name,
        'googleId': value.googleId,
        'upvotes': value.upvotes === undefined ? undefined : (value.upvotes === null ? null : (value.upvotes as Array<any>).map(CoflnetSongVoterDBModelsPartySongToJSON)),
        'downvotes': value.downvotes === undefined ? undefined : (value.downvotes === null ? null : (value.downvotes as Array<any>).map(CoflnetSongVoterDBModelsPartySongToJSON)),
        'parties': value.parties === undefined ? undefined : (value.parties === null ? null : (value.parties as Array<any>).map(CoflnetSongVoterDBModelsPartyToJSON)),
        'tokens': value.tokens === undefined ? undefined : (value.tokens === null ? null : (value.tokens as Array<any>).map(CoflnetSongVoterDBModelsOauth2TokenToJSON)),
    };
}

