/* tslint:disable */
/* eslint-disable */
/**
 * Songvoter
 * Songvoter
 *
 * The version of the OpenAPI document: 0.0.1
 * Contact: support@coflnet.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { exists, mapValues } from '../runtime';
/**
 * 
 * @export
 * @interface CoflnetSongVoterModelsAuthRefreshToken
 */
export interface CoflnetSongVoterModelsAuthRefreshToken {
    /**
     * 
     * @type {string}
     * @memberof CoflnetSongVoterModelsAuthRefreshToken
     */
    token?: string | null;
    /**
     * 
     * @type {string}
     * @memberof CoflnetSongVoterModelsAuthRefreshToken
     */
    accessToken?: string | null;
    /**
     * 
     * @type {string}
     * @memberof CoflnetSongVoterModelsAuthRefreshToken
     */
    refreshToken?: string | null;
}

/**
 * Check if a given object implements the CoflnetSongVoterModelsAuthRefreshToken interface.
 */
export function instanceOfCoflnetSongVoterModelsAuthRefreshToken(value: object): boolean {
    let isInstance = true;

    return isInstance;
}

export function CoflnetSongVoterModelsAuthRefreshTokenFromJSON(json: any): CoflnetSongVoterModelsAuthRefreshToken {
    return CoflnetSongVoterModelsAuthRefreshTokenFromJSONTyped(json, false);
}

export function CoflnetSongVoterModelsAuthRefreshTokenFromJSONTyped(json: any, ignoreDiscriminator: boolean): CoflnetSongVoterModelsAuthRefreshToken {
    if ((json === undefined) || (json === null)) {
        return json;
    }
    return {
        
        'token': !exists(json, 'token') ? undefined : json['token'],
        'accessToken': !exists(json, 'accessToken') ? undefined : json['accessToken'],
        'refreshToken': !exists(json, 'refreshToken') ? undefined : json['refreshToken'],
    };
}

export function CoflnetSongVoterModelsAuthRefreshTokenToJSON(value?: CoflnetSongVoterModelsAuthRefreshToken | null): any {
    if (value === undefined) {
        return undefined;
    }
    if (value === null) {
        return null;
    }
    return {
        
        'token': value.token,
        'accessToken': value.accessToken,
        'refreshToken': value.refreshToken,
    };
}

